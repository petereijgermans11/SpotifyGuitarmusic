{"ast":null,"code":"import axios from 'axios';\nconst SPOTIFY_BASE_URL = 'https://api.spotify.com/v1';\nexport const spotifyApi = {\n  setAccessToken(token) {\n    this.token = token;\n  },\n  async search(query, types = ['track', 'artist', 'album']) {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/search`, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      },\n      params: {\n        q: query,\n        type: types.join(',')\n      }\n    });\n    return response.data;\n  },\n  async getUserPlaylists() {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/me/playlists`, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    });\n    return response.data;\n  },\n  async getPlaylist(playlistId) {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/playlists/${playlistId}`, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    });\n    return response.data;\n  },\n  async play(uri) {\n    await axios.put(`${SPOTIFY_BASE_URL}/me/player/play`, {\n      uris: [uri]\n    }, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","SPOTIFY_BASE_URL","spotifyApi","setAccessToken","token","search","query","types","response","get","headers","params","q","type","join","data","getUserPlaylists","getPlaylist","playlistId","play","uri","put","uris"],"sources":["/Users/petereijgermans/Desktop/react/src/services/spotify.js"],"sourcesContent":["import axios from 'axios';\n\nconst SPOTIFY_BASE_URL = 'https://api.spotify.com/v1';\n\nexport const spotifyApi = {\n  setAccessToken(token) {\n    this.token = token;\n  },\n\n  async search(query, types = ['track', 'artist', 'album']) {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/search`, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      },\n      params: {\n        q: query,\n        type: types.join(',')\n      }\n    });\n    return response.data;\n  },\n\n  async getUserPlaylists() {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/me/playlists`, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    });\n    return response.data;\n  },\n\n  async getPlaylist(playlistId) {\n    const response = await axios.get(`${SPOTIFY_BASE_URL}/playlists/${playlistId}`, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    });\n    return response.data;\n  },\n\n  async play(uri) {\n    await axios.put(`${SPOTIFY_BASE_URL}/me/player/play`, {\n      uris: [uri]\n    }, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    });\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAG,4BAA4B;AAErD,OAAO,MAAMC,UAAU,GAAG;EACxBC,cAAcA,CAACC,KAAK,EAAE;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB,CAAC;EAED,MAAMC,MAAMA,CAACC,KAAK,EAAEC,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE;IACxD,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,gBAAgB,SAAS,EAAE;MAC7DS,OAAO,EAAE;QACP,eAAe,EAAE,UAAU,IAAI,CAACN,KAAK;MACvC,CAAC;MACDO,MAAM,EAAE;QACNC,CAAC,EAAEN,KAAK;QACRO,IAAI,EAAEN,KAAK,CAACO,IAAI,CAAC,GAAG;MACtB;IACF,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED,MAAMC,gBAAgBA,CAAA,EAAG;IACvB,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,gBAAgB,eAAe,EAAE;MACnES,OAAO,EAAE;QACP,eAAe,EAAE,UAAU,IAAI,CAACN,KAAK;MACvC;IACF,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED,MAAME,WAAWA,CAACC,UAAU,EAAE;IAC5B,MAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,gBAAgB,cAAciB,UAAU,EAAE,EAAE;MAC9ER,OAAO,EAAE;QACP,eAAe,EAAE,UAAU,IAAI,CAACN,KAAK;MACvC;IACF,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACO,IAAI;EACtB,CAAC;EAED,MAAMI,IAAIA,CAACC,GAAG,EAAE;IACd,MAAMpB,KAAK,CAACqB,GAAG,CAAC,GAAGpB,gBAAgB,iBAAiB,EAAE;MACpDqB,IAAI,EAAE,CAACF,GAAG;IACZ,CAAC,EAAE;MACDV,OAAO,EAAE;QACP,eAAe,EAAE,UAAU,IAAI,CAACN,KAAK;MACvC;IACF,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}