{"ast":null,"code":"var _jsxFileName = \"/Users/petereijgermans/Desktop/react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport Login from './components/Login';\nimport Sidebar from './components/Sidebar';\nimport Player from './components/Player';\nimport MainView from './components/MainView';\nimport { spotifyApi } from './services/spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const hash = window.location.hash;\n    if (hash) {\n      // Get token from URL fragment\n      const hashParams = hash.substring(1).split('&').reduce((acc, item) => {\n        const [key, value] = item.split('=');\n        acc[key] = value;\n        return acc;\n      }, {});\n      if (hashParams.access_token) {\n        const token = hashParams.access_token;\n        window.localStorage.setItem(\"token\", token);\n        setToken(token);\n        spotifyApi.setAccessToken(token);\n        window.location.hash = \"\"; // Clear the hash\n      }\n    }\n\n    // Check if there's a token in localStorage\n    const storedToken = window.localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      spotifyApi.setAccessToken(storedToken);\n    }\n  }, []);\n  const logout = () => {\n    setToken(null);\n    window.localStorage.removeItem(\"token\");\n    window.location.href = '/';\n  };\n  const handlePlayPause = async () => {\n    if (currentTrack) {\n      try {\n        if (isPlaying) {\n          await spotifyApi.pause();\n        } else {\n          await spotifyApi.play(currentTrack.uri);\n        }\n        setIsPlaying(!isPlaying);\n      } catch (error) {\n        var _error$response;\n        console.error('Error controlling playback:', error);\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n          logout(); // Token expired or invalid\n        }\n      }\n    }\n  };\n  const handleVolumeChange = async (event, newValue) => {\n    try {\n      await spotifyApi.setVolume(newValue);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error setting volume:', error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        logout(); // Token expired or invalid\n      }\n    }\n  };\n  if (!token) return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onLogout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          background: 'linear-gradient(transparent, rgba(0, 0, 0, 1))',\n          backgroundColor: 'rgb(91, 87, 115)',\n          overflowY: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(MainView, {\n          onTrackSelect: track => {\n            setCurrentTrack(track);\n            setIsPlaying(true);\n          },\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        currentTrack: currentTrack,\n        isPlaying: isPlaying,\n        onPlayPause: handlePlayPause,\n        onVolumeChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JAAfw7L3xzjQI5qr9BKZT8BHWJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Login","Sidebar","Player","MainView","spotifyApi","jsxDEV","_jsxDEV","App","_s","token","setToken","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","hash","window","location","hashParams","substring","split","reduce","acc","item","key","value","access_token","localStorage","setItem","setAccessToken","storedToken","getItem","logout","removeItem","href","handlePlayPause","pause","play","uri","error","_error$response","console","response","status","handleVolumeChange","event","newValue","setVolume","_error$response2","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","height","children","onLogout","flex","flexDirection","background","backgroundColor","overflowY","onTrackSelect","track","onPlayPause","onVolumeChange","_c","$RefreshReg$"],"sources":["/Users/petereijgermans/Desktop/react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport Login from './components/Login';\nimport Sidebar from './components/Sidebar';\nimport Player from './components/Player';\nimport MainView from './components/MainView';\nimport { spotifyApi } from './services/spotify';\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const hash = window.location.hash;\n    if (hash) {\n      // Get token from URL fragment\n      const hashParams = hash.substring(1).split('&').reduce((acc, item) => {\n        const [key, value] = item.split('=');\n        acc[key] = value;\n        return acc;\n      }, {});\n\n      if (hashParams.access_token) {\n        const token = hashParams.access_token;\n        window.localStorage.setItem(\"token\", token);\n        setToken(token);\n        spotifyApi.setAccessToken(token);\n        window.location.hash = \"\"; // Clear the hash\n      }\n    }\n\n    // Check if there's a token in localStorage\n    const storedToken = window.localStorage.getItem(\"token\");\n    if (storedToken) {\n      setToken(storedToken);\n      spotifyApi.setAccessToken(storedToken);\n    }\n  }, []);\n\n  const logout = () => {\n    setToken(null);\n    window.localStorage.removeItem(\"token\");\n    window.location.href = '/';\n  };\n\n  const handlePlayPause = async () => {\n    if (currentTrack) {\n      try {\n        if (isPlaying) {\n          await spotifyApi.pause();\n        } else {\n          await spotifyApi.play(currentTrack.uri);\n        }\n        setIsPlaying(!isPlaying);\n      } catch (error) {\n        console.error('Error controlling playback:', error);\n        if (error.response?.status === 401) {\n          logout(); // Token expired or invalid\n        }\n      }\n    }\n  };\n\n  const handleVolumeChange = async (event, newValue) => {\n    try {\n      await spotifyApi.setVolume(newValue);\n    } catch (error) {\n      console.error('Error setting volume:', error);\n      if (error.response?.status === 401) {\n        logout(); // Token expired or invalid\n      }\n    }\n  };\n\n  if (!token) return <Login />;\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <Sidebar onLogout={logout} />\n      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n        <Box \n          sx={{ \n            flex: 1,\n            background: 'linear-gradient(transparent, rgba(0, 0, 0, 1))',\n            backgroundColor: 'rgb(91, 87, 115)',\n            overflowY: 'auto',\n          }}\n        >\n          <MainView \n            onTrackSelect={(track) => {\n              setCurrentTrack(track);\n              setIsPlaying(true);\n            }}\n            token={token}\n          />\n        </Box>\n        <Player \n          currentTrack={currentTrack}\n          isPlaying={isPlaying}\n          onPlayPause={handlePlayPause}\n          onVolumeChange={handleVolumeChange}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}